@page
@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PRN221_Assignment.Models
@using PRN221_Assignment.Data
@using Microsoft.AspNetCore.Html
@model PRN221_Assignment.Pages.SavedModel
@{
    ViewData["Title"] = "Saved";
    var listFriend = (List<User>)ViewBag.listFriend;
    var listPost = (List<PostData>)ViewBag.listPost;
    var upComing = (List<User>)ViewBag.upComingBirthdayFriend;
    var listSaved = (List<int>)ViewBag.listSaved;
    string CalculateDay(DateTime? dob)
    {
        var birthday = (DateTime)dob;
        var birthdayThisYear = new DateTime(DateTime.Now.Year, birthday.Month, birthday.Day);
        var differ = (birthdayThisYear.Date - DateTime.Now.Date).Days;
        if (differ == 0)
        {
            return "Today";
        }
        if (differ == 1)
        {
            return "Tomorow";
        }
        return differ + " days after";
    }
    string GetTimeToNow(DateTime time)
    {
        var now = DateTime.Now;
        var timespan = now - time;

        if (timespan.TotalMinutes < 1)
        {
            return "just now";
        }

        if (timespan.TotalHours < 1)
        {
            int minutes = (int)timespan.TotalMinutes;
            return minutes == 1 ? "1 minute" : $"{minutes} minutes";
        }

        if (timespan.TotalDays < 1)
        {
            int hours = (int)timespan.TotalHours;
            return hours == 1 ? "1 hour" : $"{hours} hours";
        }

        if (timespan.TotalDays < 7)
        {
            int days = (int)timespan.TotalDays;
            return days == 1 ? "1 day" : $"{days} days";
        }

        if (timespan.TotalDays < 365)
        {
            int weeks = (int)(timespan.TotalDays / 7);
            return weeks == 1 ? "1 week" : $"{weeks} weeks";
        }

        int years = now.Year - time.Year;
        return years == 1 ? "1 year" : $"{years} years";
    }
    string GetColorOfEmotion(string emotionURL)
    {
        var emotion = emotionURL.Split('/').Last().Replace(".png", "");
        switch (emotion)
        {
            case "Like":
                return "#0861f2";
            case "Love":
                return "#e73b54";
            case "Angry":
                return "#dd6b0e";
            default:
                return "#eaa823";
        }
    }
}

@functions {
    IHtmlContent RenderComments(List<CommentData> comments)
    {
        var html = new System.Text.StringBuilder();
        html.Append("<ul>");
        foreach (var comment in comments)
        {
            html.Append("<li>");
            html.Append("<div class='comment'>");
            html.AppendFormat("<img src='{0}' alt='{1}' class='avatar' />", comment.User.ProfilePhotoUrl, "img-user");
            html.Append("<div class='comment-content'>");
            html.AppendFormat("<span class='user-name'>{0}</span>", comment.User.Fullname);
            html.AppendFormat("<span class='comment-text'>{0}</span>", comment.Comment);
            html.Append("<div>");
            html.AppendFormat("<span class='comment-time'>{0}</span>", comment.Time.ToString("g"));
            html.AppendFormat("<span class='comment-actions'>Like ({0})</span>", comment.CmtLikes.Count);
            html.AppendFormat("<span class='comment-actions' onclick=\"ReplyTo('{0}','{1}','{2}','{3}',event)\">Reply</span>", comment.CommentId, comment.User.Fullname, comment.Comment.Length > 50 ? comment.Comment.Substring(0, 50) + " ..." : comment.Comment, comment.PostId);
            html.Append("</div></div></div>");

            if (comment.ListComment != null && comment.ListComment.Any())
            {
                html.Append("<ul>");
                html.Append(RenderComments(comment.ListComment).ToString());
                html.Append("</ul>");
            }

            html.Append("</li>");
        }

        html.Append("</ul>");
        return new HtmlString(html.ToString());
    }
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    .comments-section {
        font-family: Arial, sans-serif;
    }

    .comment {
        display: flex;
        margin-bottom: 10px;
        position: relative;
    }

    .avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
        border: 2px solid gray;
    }

    .comment-content {
        background-color: #f0f0f0;
        border-radius: 10px;
        padding: 10px;
        flex: 1;
    }

    .user-name {
        font-weight: bold;
        margin-right: 5px;
    }

    .comment-text {
        display: block;
    }

    .comment-time {
        font-size: 0.8em;
        color: #777;
    }

    .comment-actions {
        margin: 0 10px 0 10px;
        cursor: pointer;
        color: #007bff;
    }

        .comment-actions :hover {
            text-decoration: underline;
        }

    ul {
        list-style-type: none;
        padding-left: 20px;
    }

        ul li {
            margin-bottom: 10px;
        }

        ul.nested-comments {
            position: relative;
            padding-left: 20px;
            border-left: 2px solid #ccc;
        }

            ul.nested-comments:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                bottom: 0;
                width: 2px;
                background: #ccc;
            }

    .row-block {
        flex: 5%;
        justify-content: center;
        border-radius: 5px;
        padding: 10px 0 10px 0
    }

        .row-block:hover {
            background-color: #f2f2f2;
        }

    body.bg-dark .row-block:hover {
        background-color: #333333; /* Ngài có thể thay đổi mã màu tùy ý */
    }

    .nofirst-icon {
        margin-left: -5px;
        border: 2px solid white;
        border-radius: 50%;
    }
</style>

<div id="content-page" class="content-page">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 row m-0 p-0">
                @if (listPost != null)
                {
                    foreach (var post in listPost)
                    {
                        <div class="col-sm-12">
                            <div class="card card-block card-stretch card-height">
                                <div class="card-body" id="card-body-@post.Id" style="padding-bottom: 0">
                                    <div class="user-post-data">
                                        <div class="d-flex justify-content-between">
                                            <div class="me-3">
                                                <img class="rounded-circle avatar-60 img-fluid" src="@post.User.ProfilePhotoUrl" alt="img">
                                            </div>
                                            <div class="w-100">
                                                <div class="d-flex justify-content-between">
                                                    <div class="">
                                                        <h5 class="mb-0 d-inline-block">@post.User.Fullname</h5>
                                                        <span class="mb-0 d-inline-block">Add New Post</span>
                                                        <p class="mb-0 text-primary">@GetTimeToNow(post.Time)</p>
                                                    </div>
                                                    <div class="card-post-toolbar">
                                                        <div class="dropdown">
                                                            <span class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                                <i class="ri-more-fill"></i>
                                                            </span>
                                                            <div class="dropdown-menu m-0 p-0">
                                                                <a class="dropdown-item p-3 option-post">
                                                                    <div class="d-flex align-items-top">
                                                                        @if (!listSaved.Contains(post.Id))
                                                                        {
                                                                            <div class="h4">
                                                                                <i data-post-id="@post.Id" class="ri-save-line"></i>
                                                                            </div>
                                                                            <div class="data ms-2">
                                                                                <h6>Save Post</h6>
                                                                                <p class="mb-0">Add this to your saved items</p>
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="h4">
                                                                                <i data-post-id="@post.Id" class="ri-close-line"></i>
                                                                            </div>
                                                                            <div class="data ms-2">
                                                                                <h6>Remove Saved Post</h6>
                                                                                <p class="mb-0">Remove this from your saved items</p>
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-3">
                                        <p>@post.Caption</p>
                                    </div>
                                    <div class="user-post">
                                        <div class="newt">
                                            @foreach (var url in post.PhotoURL)
                                            {
                                                if (string.IsNullOrEmpty(url))
                                                {
                                                    <div class="post-image">

                                                        <img src="@url" alt="post-image" class="img-fluid rounded w-100">

                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="comment-area mt-3">
                                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                                            @if (post.ListLike.Count > 0)
                                            {
                                                <div class="like-block position-relative d-flex align-items-center">
                                                    <div class="d-flex align-items-center" id="like-post-@post.Id">
                                                        @foreach (var item in post.ListLike.GroupBy(x => x.EmotionURL).OrderByDescending(x => x.Count()).Take(3))
                                                        {
                                                            <div class="total-like-block">
                                                                <div class="dropdown">
                                                                    <span class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                                        <img src='@item.Key' @(item != post.ListLike.GroupBy(x => x.EmotionURL).OrderByDescending(x => x.Count()).Take(3).First() ? "class=nofirst-icon" : "") />
                                                                    </span>
                                                                    <div class="dropdown-menu" style="background-color: rgba(60, 60, 60, 0.7)">
                                                                        @foreach (var like in item)
                                                                        {
                                                                            <div style="color: white; padding-left: 10px;">@like.User.Fullname</div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        <div class="total-like-block ms-2 me-3">
                                                            <div class="dropdown">
                                                                <span class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                                    @post.ListLike.Count
                                                                </span>
                                                                <div class="dropdown-menu">
                                                                    @foreach (var like in post.ListLike)
                                                                    {
                                                                        <div class="dropdown-item">@like.User.Fullname</div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (post.ListComments.Any())
                                            {
                                                <div class="share-block d-flex align-items-center feather-icon mt-2 mt-md-0">
                                                    <div class="dropdown">
                                                        <span class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                            @post.countComment Comments
                                                        </span>
                                                        <div class="dropdown-menu">
                                                            @foreach (var cmt in post.ListCommentsTotal)
                                                            {
                                                                <a class="dropdown-item" href="#">@cmt.User.Fullname</a>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <hr style="margin-bottom: 0">
                                        <div class="d-flex justify-content-between align-items-center flex-wrap" style="padding: 3px 0 3px 0">
                                            <div class="like-data row-block" onclick="HandleLike('@post.Id', '1', 'true', event)" id="like-display-@post.Id">
                                                @{
                                                    var likeData = post.ListLike.FirstOrDefault(x => x.User.UserId == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)));
                                                }
                                                <div class="dropdown d-flex" style="justify-content: center">
                                                    @if (likeData != null)
                                                    {
                                                        <span class="dropdown-toggle" style="color: @GetColorOfEmotion(likeData.EmotionURL)" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                            <img src="@likeData.EmotionURL" style="margin-top: -5px"></img>
                                                            @likeData.EmotionURL.Split('/').Last().Replace(".png", "")
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" role="button">
                                                            <i class="fa-regular fa-thumbs-up"></i>
                                                            Like
                                                        </span>
                                                    }
                                                    <div class="dropdown-menu py-2" style="border-radius: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); width: 243px">
                                                        <a class="ms-2 icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '1', 'false', event)"><img src="~/Image/Emoji/like.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '2', 'false', event)"><img src="~/Image/Emoji/love.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '3', 'false', event)"><img src="~/Image/Emoji/care.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '4', 'false', event)"><img src="~/Image/Emoji/haha.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '5', 'false', event)"><img src="~/Image/Emoji/wow.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '6', 'false', event)"><img src="~/Image/Emoji/sad.png" class="img-fluid" alt=""></a>
                                                        <a class="icon me-2" data-bs-toggle="tooltip" data-bs-placement="top" onclick="HandleLike('@post.Id', '7', 'false', event)"><img src="~/Image/Emoji/angry.png" class="img-fluid" alt=""></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="share-block d-flex align-items-center feather-icon mt-2 mt-md-0 row-block clickable" onclick="toggleComment('@post.Id')">
                                                <span>
                                                    <i class="fa-regular fa-comment"></i>
                                                    Comment
                                                </span>
                                            </div>
                                        </div>
                                        <hr style="margin-top: 0" id="hr-element-@post.Id" hidden>
                                        <div id="comment-container-@post.Id" hidden>
                                            <div class="comments-section">
                                                @RenderComments(post.ListComments)
                                            </div>
                                            <form class="comment-text mt-3">
                                                <div id="replyDiv-@post.Id" class="comment-text align-items-center mt-3 justify-content-between" style="display: none !important; border-top: 1px solid">
                                                    <div>
                                                        <input type="text" id="displayReplyTo-@post.Id" style="border: none; width: 400px; font-weight: bold" readonly />
                                                        <input type="text" id="displayComment-@post.Id" style="border: none; width: 573px; color: gray" readonly />
                                                    </div>
                                                    <input hidden name="replyTo" value="0" type="text" id="replyTo-@post.Id" />
                                                    <input hidden name="postId" type="text" value="@post.Id" />
                                                    <i class="fa fa-close closer" onclick="ReplyTo('-1', '0', '0', '@post.Id')"></i>
                                                </div>
                                                <div class="comment-text d-flex align-items-center">
                                                    <input id="@post.Id" type="text" onkeydown="if (event.key === 'Enter') newComment(event)" class="form-control rounded" placeholder="Enter Your Comment">
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="col-sm-12 text-center">
                <img src="~/assets/images/page-img/page-load-loader.gif" alt="loader" style="height: 100px;">
            </div>
        </div>
    </div>
</div>

<script>
    function toggleComment(postId) {
        var commentDiv = document.getElementById("comment-container-" + postId);
        var cardBody = document.getElementById("card-body-" + postId);
        var hr = document.getElementById("hr-element-" + postId);
        if (commentDiv.hidden) {
            commentDiv.hidden = false;
            cardBody.style.paddingBottom = '10px';
            hr.hidden = false
        } else {
            commentDiv.hidden = true;
            cardBody.style.paddingBottom = '0';
            hr.hidden = true;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        $('.newt').slick({
            infinite: false,
        });
    });

    var styles = `
                                                                                        .slick-prev, .slick-next{
                                                                                            color:black;
                                                                                        }
                                                                                `
    if (document.body.classList.contains("bg-dark")) {
        styles = `
                                                                                            .slick-prev, .slick-next{
                                                                                                color:white;
                                                                                            }
                                                                                    `
    }
    var styleSheet = document.createElement("style")
    styleSheet.textContent = styles;
    document.head.appendChild(styleSheet);
    window.onload = (event) => {
        var comment = document.querySelectorAll(".comment-content");
        comment.forEach(m => {
            if (document.body.classList.contains('bg-dark')) {
                m.classList.add("comment-content-dark");
            }
        });
    };
</script>